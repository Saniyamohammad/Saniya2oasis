# Step 1: Import Libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# Step 2: Load Dataset
# Replace 'path_to_dataset' with the actual path to your dataset
df = pd.read_csv('path_to_dataset.csv')

# Step 3: Preprocess Data
# Assuming the dataset has two columns: 'label' and 'email'
# 'label' column contains 0 for non-spam and 1 for spam emails
# 'email' column contains the email text

# Check for missing values and handle them if any
df.dropna(inplace=True)

# Encode labels (if not already encoded)
# df['label'] = df['label'].map({'ham': 0, 'spam': 1})

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(df['email'], df['label'], test_size=0.2, random_state=42)

# Step 4: Feature Extraction using TF-IDF
vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Step 5: Train the Model
model = LogisticRegression()
model.fit(X_train_tfidf, y_train)

# Step 6: Evaluate the Model
y_pred = model.predict(X_test_tfidf)
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy}')
print(classification_report(y_test, y_pred))

# Save the model and vectorizer
import joblib
joblib.dump(model, 'spam_detector_model.pkl')
joblib.dump(vectorizer, 'tfidf_vectorizer.pkl')
